<html xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:MSHelp="http://msdn.microsoft.com/mshelp" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:ddue="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:msxsl="urn:schemas-microsoft-com:xslt"><head><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8" /><META NAME="save" CONTENT="history" /><title>큰 데이터 업데이트 샘플</title><meta name="Language" content="ko-kr" /><meta name="System.Keywords" content="선택 버퍼링" /><meta name="System.Keywords" content="선택 버퍼링 샘플" /><meta name="System.Keywords" content="isWrapperFor" /><meta name="System.Keywords" content="큰 데이터" /><meta name="System.Keywords" content="응답 버퍼링" /><meta name="System.Keywords" content="unwrap" /><meta name="System.Keywords" content="선택 버퍼링 사용" /><meta name="Microsoft.Help.Id" content="76ecc05f-a77d-40a2-bab9-91a7fcf17347" /><meta name="Description" content="이 SQL Server용 Microsoft JDBC Driver 샘플 응용 프로그램에서는 데이터베이스의 큰 열을 업데이트하는 방법을 보여 줍니다." /><meta name="Microsoft.Help.ContentType" content="Samples" /><link rel="stylesheet" type="text/css" href="../local/Classic.css" /><script type="text/javascript" src="../scripts/EventUtilities.js">&amp;nbsp;</script><script type="text/javascript" src="../scripts/SplitScreen.js">&amp;nbsp;</script><script type="text/javascript" src="../scripts/Dropdown.js">&amp;nbsp;</script><script type="text/javascript" src="../scripts/script_manifold.js">&amp;nbsp;</script><script type="text/javascript" src="../scripts/script_feedBack.js">&amp;nbsp;</script><script type="text/javascript" src="../scripts/CheckboxMenu.js">&amp;nbsp;</script><script type="text/javascript" src="../scripts/CommonUtilities.js">&amp;nbsp;</script><script type="text/javascript" src="../local/script_main.js">&amp;nbsp;</script></head><body><div id="header"><table id="bottomTable" cellpadding="0" cellspacing="0"><tr><td align="left"><span id="headerBold">큰 데이터 업데이트 샘플</span></td></tr></table><table id="gradientTable"><tr><td class="nsrBottom" background="../icons/gradient.gif" /></tr></table></div><div id="mainSection"><div id="mainBody"><div class="introduction"><p>이 SQL Server용 Microsoft JDBC Driver 샘플 응용 프로그램에서는 데이터베이스의 큰 열을 업데이트하는 방법을 보여 줍니다.</p><p>이 샘플의 코드 파일 이름은 updateLargeData.java이며 다음 위치에 있습니다.</p><p>&lt;<i>installation directory</i>&gt;\sqljdbc_&lt;<i>version</i>&gt;\&lt;<i>language</i>&gt;\help\samples\adaptive</p></div><h1 class="heading">요구 사항</h1><div id="requirementsTitleSection" class="section" name="collapseableSection" style=""><p>이 샘플 응용 프로그램을 실행하려면 SQL Server 2005 AdventureWorks 샘플 데이터베이스에 대한 액세스 권한이 필요합니다. 또한 sqljdbc4.jar 파일을 포함하도록 클래스 경로를 설정해야 합니다. 클래스 경로에 sqljdbc4.jar 파일에 대한 항목이 없으면 샘플 응용 프로그램에서 일반적인 "클래스를 찾을 수 없습니다." 예외가 발생합니다. 클래스 경로를 설정하는 방법은 <span sdata="link"><a href="6faaf05b-8b70-4ed2-9b44-eee5897f1cd0.htm">JDBC 드라이버 사용</a></span>을 참조하십시오. </p><div style="margin: .5em 1.5em .5em 1.5em"><b></b><p>SQL Server용 Microsoft JDBC Driver는 기본 설정된 JRE(Java Runtime Environment)에 따라 사용할 수 있는 sqljdbc.jar 및 sqljdbc4.jar 클래스 라이브러리 파일을 제공합니다. 이 샘플에서는 JDBC 4.0 API에 도입된 <a href="53f3291f-d43a-476b-a656-d86168dacf6c.htm">isWrapperFor</a> 및 <a href="ce680176-ef04-4e44-bb6c-ec50bd06e7e6.htm">unwrap</a> 메서드를 사용하여 드라이버 관련 응답 버퍼링 메서드에 액세스합니다. 이 샘플을 컴파일하고 실행하려면 JDBC 4.0을 지원하는 sqljdbc4.jar 클래스 라이브러리가 있어야 합니다. JAR 파일 선택에 대한 자세한 내용은 <span sdata="link"><a href="447792bb-f39b-49b4-9fd0-1ef4154c74ab.htm">JDBC 드라이버 시스템 요구 사항</a></span>을 참조하십시오.</p></div></div><h1 class="heading">예</h1><div id="exampleSection" class="section" name="collapseableSection" style=""><p>다음 예제의 샘플 코드에서는 SQL Server 2005 AdventureWorks 데이터베이스에 연결합니다. 그런 다음 Statement 개체를 만들고 <a href="53f3291f-d43a-476b-a656-d86168dacf6c.htm">isWrapperFor</a> 메서드를 사용하여 Statement 개체가 지정된 <a href="ec24963c-8b51-4838-91e9-1fbfa2347451.htm">SQLServerStatement</a> 클래스의 래퍼인지 확인합니다. <a href="ce680176-ef04-4e44-bb6c-ec50bd06e7e6.htm">unwrap</a> 메서드는 드라이버 관련 응답 버퍼링 메서드에 액세스하는 데 사용됩니다. </p><p>그런 다음 <a href="ec24963c-8b51-4838-91e9-1fbfa2347451.htm">SQLServerStatement</a> 클래스의 <a href="9f489835-6cda-4c8c-b139-079639a169cf.htm">setResponseBuffering</a> 메서드를 사용하여 응답 버퍼링 모드를 "<span sdata="langKeyword" value="adaptive"><span class="keyword">adaptive</span></span>"로 설정하고 선택 버퍼링 모드를 가져오는 방법도 보여 줍니다.</p><p>그런 다음 SQL 문을 실행하고 반환된 데이터를 업데이트 가능한 <a href="eaffcff1-286c-459f-83da-3150778480c9.htm">SQLServerResultSet</a> 개체에 배치합니다. </p><p>마지막으로 결과 집합에 포함된 데이터 행을 반복합니다. 빈 문서 요약이 발견되면 <a href="0cf286c7-9dcd-4b02-a568-ba6b6eb27e82.htm">updateString</a> 및 <a href="cfced0ca-a281-40dc-8d2f-370d5f0bf12b.htm">updateRow</a> 메서드 조합을 사용하여 데이터 행을 업데이트하고 데이터베이스에 다시 보관합니다. 이미 데이터가 있으면 <a href="f81dde01-d328-4b32-8871-1efac645b68e.htm">getString</a> 메서드를 사용하여 포함된 데이터 일부를 표시합니다.</p><p>드라이버의 기본 동작은 "<span sdata="langKeyword" value="adaptive."><span class="keyword">adaptive.</span></span>"입니다. 그러나 정방향 전용 업데이트 가능 결과 집합의 경우 및 결과 집합의 데이터가 응용 프로그램 메모리보다 큰 경우에는 응용 프로그램에서 <a href="9f489835-6cda-4c8c-b139-079639a169cf.htm">SQLServerStatement</a> 클래스의 <a href="ec24963c-8b51-4838-91e9-1fbfa2347451.htm">setResponseBuffering</a> 메서드를 사용하여 명시적으로 선택 버퍼링 모드를 설정해야 합니다.</p><div name="snippetGroup"><div class="sampleCode"><span codeLanguage="Java"><pre>import java.sql.*;
import java.io.*;
import com.microsoft.sqlserver.jdbc.SQLServerStatement;

public class updateLargeData {
	
   public static void main(String[] args) {

      // Create a variable for the connection string.
      String connectionUrl = 
    	    "jdbc:sqlserver://localhost:1433;" +
            "databaseName=AdventureWorks;integratedSecurity=true;";

      // Declare the JDBC objects.
      Connection con = null;
      Statement stmt = null;
      ResultSet rs = null;  
      Reader reader = null;

      try {
          // Establish the connection.
          Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
          con = DriverManager.getConnection(connectionUrl);

          stmt = con.createStatement(ResultSet.TYPE_FORWARD_ONLY, ResultSet.CONCUR_UPDATABLE);

          // Since the summaries could be large, make sure that
          // the driver reads them incrementally from a database, 
          // even though a server cursor is used for the updatable result sets.

          // The recommended way to access the Microsoft JDBC Driver for SQL Server 
          // specific methods is to use the JDBC 4.0 Wrapper functionality. 
          // The following code statement demonstrates how to use the 
          // Statement.isWrapperFor and Statement.unwrap methods
          // to access the driver specific response buffering methods.

          if (stmt.isWrapperFor(com.microsoft.sqlserver.jdbc.SQLServerStatement.class)) {
              SQLServerStatement SQLstmt = 
                 stmt.unwrap(com.microsoft.sqlserver.jdbc.SQLServerStatement.class);
        	  
              SQLstmt.setResponseBuffering("adaptive");
              System.out.println("Response buffering mode has been set to " +
                 SQLstmt.getResponseBuffering());
          }

          // Select all of the document summaries.
          rs = stmt.executeQuery("SELECT Title, DocumentSummary FROM Production.Document");

          // Update each document summary.
          while (rs.next()) {

               // Retrieve the original document summary.
               reader = rs.getCharacterStream("DocumentSummary");

               if (reader == null)
               {
                   // Update the document summary.
                   System.out.println("Updating " + rs.getString("Title"));
                   rs.updateString("DocumentSummary", "Work in progress");
                   rs.updateRow();
               }
               else
               {
            	   // Do something with the chunk of the data that was                   
                   // read.
                   System.out.println("reading " + rs.getString("Title"));
                   reader.close();
                   reader = null;
               }
          }
      }
      // Handle any errors that may have occurred.
      catch (Exception e) {
         e.printStackTrace();
      }
      finally {
          if (reader != null) try { reader.close(); } catch(Exception e) {}
          if (rs != null) try { rs.close(); } catch(Exception e) {}
          if (stmt != null) try { stmt.close(); } catch(Exception e) {}
    	  if (con != null) try { con.close(); } catch(Exception e) {}
      }
   }
}

</pre></span></div></div></div><span id="seeAlsoSpan"><h1 class="heading">참고 항목</h1></span><div id="seeAlsoSection" class="section" name="collapseableSection" style=""><div class="seeAlsoStyle"><span sdata="link"><a href="5b93569f-eceb-4f05-b49c-067564cd3c85.htm">큰 데이터 작업</a></span></div></div></div><div id="footer" class="section"><span id="feedbackarea">이 항목에 대한 <a href="javascript:SubmitFeedback('DevDocs@Microsoft.com','','','','8.0.12060.10000','%0\d의견을%20보내주셔서%20감사합니다.%20개발자%20작성%20팀에서는%20설명서를%20보완하는%20데%20보내주신%20의견을%20적극%20활용하고%20있습니다.%20보내주신%20의견을%20검토하는%20동안%20명확한%20설명이%20필요하거나%20해결책에%20대한%20추가%20의견을%20묻는%20전자%20메일을%20받을%20수%20있습니다.%20귀하의%20전자%20메일은%20기타%20다른%20용도로%20사용되지%20않고%20검토가%20끝난%20후%20바로%20폐기됩니다.%0\AMicrosoft의%20개인%20정보%20취급%20방침에%20대한%20자세한%20내용은%20http://privacy.microsoft.com/ko-kr/default.aspx를%20참조하십시오.%0\A%0\d','고객%20의견');">사용자 의견</a>을 Microsoft로 보내 주십시오.</span><span id="copyrightarea"><p><a href="9bad553b-9e70-4696-8499-2e35f772a1e0.htm">© 2012 Microsoft. All rights reserved.</a></p></span></div></div></body></html>