<html xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:MSHelp="http://msdn.microsoft.com/mshelp" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:ddue="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:msxsl="urn:schemas-microsoft-com:xslt"><head><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8" /><META NAME="save" CONTENT="history" /><title>데이터 형식 변환 이해</title><meta name="Language" content="ko-kr" /><meta name="System.Keywords" content="데이터 형식 변환" /><meta name="Microsoft.Help.Id" content="98fa7488-aac3-45b4-8aa4-83ed6ab638b4" /><meta name="Description" content="Java 프로그래밍 언어 데이터 형식을 SQL Server 데이터 형식으로 손쉽게 변환하기 위해 SQL Server용 Microsoft JDBC Driver는 JDBC 사양에서 요구하는 데이터 형식 변환 기능을 제공합니다. 이 기능은 모든 형식을 Object, String 및 byte[] 데이터 형식으로 서로 자유롭게 변환할 수 있어 유연성이 뛰어납니다." /><meta name="Microsoft.Help.ContentType" content="Concepts" /><link rel="stylesheet" type="text/css" href="../local/Classic.css" /><script type="text/javascript" src="../scripts/EventUtilities.js">&amp;nbsp;</script><script type="text/javascript" src="../scripts/SplitScreen.js">&amp;nbsp;</script><script type="text/javascript" src="../scripts/Dropdown.js">&amp;nbsp;</script><script type="text/javascript" src="../scripts/script_manifold.js">&amp;nbsp;</script><script type="text/javascript" src="../scripts/script_feedBack.js">&amp;nbsp;</script><script type="text/javascript" src="../scripts/CheckboxMenu.js">&amp;nbsp;</script><script type="text/javascript" src="../scripts/CommonUtilities.js">&amp;nbsp;</script><script type="text/javascript" src="../local/script_main.js">&amp;nbsp;</script></head><body><div id="header"><table id="bottomTable" cellpadding="0" cellspacing="0"><tr><td align="left"><span id="headerBold">데이터 형식 변환 이해</span></td></tr></table><table id="gradientTable"><tr><td class="nsrBottom" background="../icons/gradient.gif" /></tr></table></div><div id="mainSection"><div id="mainBody"><div class="introduction"><p>Java 프로그래밍 언어 데이터 형식을 SQL Server 데이터 형식으로 손쉽게 변환하기 위해 SQL Server용 Microsoft JDBC Driver는 JDBC 사양에서 요구하는 데이터 형식 변환 기능을 제공합니다. 이 기능은 모든 형식을 <span sdata="langKeyword" value="Object"><span class="keyword">Object</span></span>, <span sdata="langKeyword" value="String"><span class="keyword">String</span></span> 및 <span sdata="langKeyword" value="byte[]"><span class="keyword">byte[]</span></span> 데이터 형식으로 서로 자유롭게 변환할 수 있어 유연성이 뛰어납니다. </p></div><h1 class="heading">Getter 메서드 변환</h1><div id="sectionSection0" class="section" name="collapseableSection" style=""><p>다음 차트에는 SQL Server 데이터 형식을 기반으로 하는 <a href="eaffcff1-286c-459f-83da-3150778480c9.htm">SQLServerResultSet</a> 클래스의 <b>get&lt;Type&gt;()</b> 메서드에 대한 JDBC 드라이버의 변환 맵과 <a href="30710a63-c05d-47d9-9cf9-c087a1c76373.htm">SQLServerCallableStatement</a> 클래스의 <b>get&lt;Type&gt;</b> 메서드에서 지원되는 변환 등이 나와 있습니다.</p><img alt="JDBCGetterConversions" src="../art/JDBCGetterConversions.gif" /><p>다음은 JDBC 드라이버의 getter 메서드에서 지원하는 세 가지 변환 범주입니다.</p><ul><li><p><span class="label">비손실(x)</span>: getter 형식이 원본 서버 유형과 동일하거나 작은 경우의 변환입니다. 예를 들어, 원본 서버 10진수 열에 대해 <b>getBigDecimal</b>을 호출하는 경우는 변환이 필요하지 않습니다.</p></li><li><p><span class="label">변환(y)</span>: 변환이 일반적이고 Java 언어 변환 규칙을 따르는 경우 숫자 서버 유형을 Java 언어 형식으로 변환하는 것입니다. 이러한 변환의 경우 항상 전체 자릿수가 잘리고(반올림하지 않음) 오버플로는 좀 더 작은 대상 유형의 모듈로 처리합니다. 예를 들어, 값이 "1.9999"인 원본 <span sdata="langKeyword" value="decimal"><span class="keyword">decimal</span></span> 열에 대해 <b>getInt</b>를 호출하면 "1"을 반환하거나 원본 <span sdata="langKeyword" value="decimal"><span class="keyword">decimal</span></span> 값이 "3000000000"인 경우 <span sdata="langKeyword" value="int"><span class="keyword">int</span></span> 값은 "-1294967296"으로 오버플로 오류가 발생합니다.</p></li><li><p><span class="label">데이터 의존(z)</span>: 원본 문자 형식에서 숫자 형식으로 변환하려면 문자 형식에 해당 형식으로 변환할 수 있는 값이 있어야 합니다. 그 외 다른 변환은 수행되지 않습니다. getter 형식에 비해 너무 큰 값은 잘못된 값입니다. 예를 들어, "53"이 들어있는 varchar(50) 열에 대해 <b>getInt</b>를 호출하면 값은 <span sdata="langKeyword" value="int"><span class="keyword">int</span></span>로 반환됩니다. 하지만 원본 값이 "xyz" 또는 "3000000000"인 경우에는 오류가 발생합니다.</p></li></ul><p><span sdata="langKeyword" value="binary"><span class="keyword">binary</span></span>, <span sdata="langKeyword" value="varbinary"><span class="keyword">varbinary</span></span>, <span sdata="langKeyword" value="varbinary(max)"><span class="keyword">varbinary(max)</span></span> 또는 <span sdata="langKeyword" value="image"><span class="keyword">image</span></span> 열 데이터 형식에 대해 <b>getString</b>을 호출한 경우 값은 16진수 문자열 값으로 반환됩니다.</p></div><h1 class="heading">Updater 메서드 변환</h1><div id="sectionSection1" class="section" name="collapseableSection" style=""><p><a href="eaffcff1-286c-459f-83da-3150778480c9.htm">SQLServerResultSet</a> 클래스의 <b>update&lt;Type&gt;()</b> 메서드에 전달되는 Java 형식 데이터의 경우 다음 변환이 적용됩니다.</p><img alt="JDBCUpdaterConversions" src="../art/JDBC_JDBCUpdatterConversions.gif" /><p>다음은 JDBC 드라이버의 updater 메서드에서 지원하는 세 가지 변환 범주입니다.</p><ul><li><p><span class="label">비손실(x)</span>: updater 형식이 원본 서버 유형과 동일하거나 작은 경우의 변환입니다. 예를 들어, 원본 서버 10진수 열에 대해 <b>updateBigDecimal</b>을 호출하는 경우는 변환이 필요하지 않습니다.</p></li><li><p><span class="label">변환(y)</span>: 변환이 일반적이고 Java 언어 변환 규칙을 따르는 경우 숫자 서버 유형을 Java 언어 형식으로 변환하는 것입니다. 이러한 변환의 경우 항상 전체 자릿수가 잘리고(반올림하지 않음) 오버플로는 좀 더 작은 대상 유형의 모듈로로 처리됩니다. 예를 들어, 값이 "1.9999"인 원본 <span sdata="langKeyword" value="int"><span class="keyword">int</span></span> 열에 대해 <b>updateDecimal</b>을 호출하면 "1"이 반환되고 원본 <span sdata="langKeyword" value="decimal"><span class="keyword">decimal</span></span> 값이 "3000000000"인 경우 <span sdata="langKeyword" value="int"><span class="keyword">int</span></span> 값은 "-1294967296"으로 오버플로가 발생합니다.</p></li><li><p><span class="label">데이터 의존(z)</span>: 원본 데이터 형식에서 대상 데이터 형식으로 변환하려면 포함된 값을 대상 형식으로 변환할 수 있어야 합니다. 그 외 다른 변환은 수행되지 않습니다. getter 형식에 비해 너무 큰 값은 잘못된 값입니다. 예를 들어, "53"이 들어있는 int 열에 대해 <b>updateString</b>을 호출하면 업데이트가 성공합니다. 하지만 원본 문자열 값이 "foo" 또는 "3000000000"인 경우에는 오류가 발생합니다.</p></li></ul><p><span sdata="langKeyword" value="binary"><span class="keyword">binary</span></span>, <span sdata="langKeyword" value="varbinary"><span class="keyword">varbinary</span></span>, <span sdata="langKeyword" value="varbinary(max)"><span class="keyword">varbinary(max)</span></span> 또는 <span sdata="langKeyword" value="image"><span class="keyword">image</span></span> 열 데이터 형식에 대해 <b>updateString</b>을 호출한 경우 문자열 값은 16진수 문자열 값으로 처리됩니다.</p><p>SQL Server 열 데이터 형식이 <span sdata="langKeyword" value="XML"><span class="keyword">XML</span></span>인 경우 데이터 값은 올바른 <span sdata="langKeyword" value="XML"><span class="keyword">XML</span></span>이어야 합니다. <b>updateBytes</b>, <b>updateBinaryStream</b> 또는 <b>updateBlob</b> 메서드를 호출하는 경우 데이터 값은 XML 문자의 16진수 문자열 표현이어야 합니다. 예를 들면 다음과 같습니다. </p><div class="sampleCode"><span codeLanguage="other"><pre>&lt;hello&gt;world&lt;/hello&gt; = 0x3C68656C6C6F3E776F726C643C2F68656C6C6F3E </pre></span></div><p>XML 문자가 특정 문자 인코딩을 사용하는 경우에는 BOM(바이트 순서 표시)이 필요합니다.</p></div><h1 class="heading">Setter 메서드 변환</h1><div id="sectionSection2" class="section" name="collapseableSection" style=""><p><a href="a8481c06-fbba-432b-8c69-4f4619c20ad4.htm">SQLServerPreparedStatement</a> 클래스 및 <a href="30710a63-c05d-47d9-9cf9-c087a1c76373.htm">SQLServerCallableStatement</a> 클래스의 <b>set&lt;Type&gt;()</b> 메서드에 전달되는 Java 형식 데이터에 대해서는 다음과 같은 변환이 적용됩니다.</p><img alt="JDBCSetterConversions" src="../art/JDBC_JDBCSetterConversions_v2.gif" /><p>서버는 변환을 시도하고 실패하면 오류를 반환합니다.</p><p><span sdata="langKeyword" value="String"><span class="keyword">String</span></span> 데이터 형식의 경우 값이 <span sdata="langKeyword" value="VARCHAR"><span class="keyword">VARCHAR</span></span> 길이를 초과하면 <span sdata="langKeyword" value="LONGVARCHAR"><span class="keyword">LONGVARCHAR</span></span>에 매핑되며 마찬가지로 <span sdata="langKeyword" value="NVARCHAR"><span class="keyword">NVARCHAR</span></span>는 값이 <span sdata="langKeyword" value="NVARCHAR"><span class="keyword">NVARCHAR</span></span>에서 지원하는 길이를 초과하면 <span sdata="langKeyword" value="LONGNVARCHAR"><span class="keyword">LONGNVARCHAR</span></span>에 매핑됩니다. <span sdata="langKeyword" value="byte[]"><span class="keyword">byte[]</span></span>의 경우도 마찬가지입니다. 값이 <span sdata="langKeyword" value="VARBINARY"><span class="keyword">VARBINARY</span></span>보다 길면 <span sdata="langKeyword" value="LONGVARBINARY"><span class="keyword">LONGVARBINARY</span></span>가 됩니다.</p><p>다음은 JDBC 드라이버의 setter 메서드에서 지원하는 두 가지 변환 범주입니다.</p><ul><li><p><span class="label">비손실(x)</span>: setter 형식이 원본 서버 유형과 동일하거나 작은 경우의 숫자 변환입니다. 예를 들어, 원본 서버 <span sdata="langKeyword" value="decimal"><span class="keyword">decimal</span></span> 열에 대해 <b>setBigDecimal</b>을 호출하는 경우는 변환이 필요하지 않습니다. 숫자에서 문자로 변환하는 경우에는 <span sdata="langKeyword" value="numeric"><span class="keyword">numeric</span></span> 숫자 데이터 형식이 <span sdata="langKeyword" value="String"><span class="keyword">String</span></span>으로 변환됩니다. 예를 들어 varchar(50) 열에 값 "53"으로 <b>setDouble</b>을 호출하면 해당 대상 열에 문자 값 "53"이 생성됩니다.</p></li><li><p><span class="label">변환(y)</span>: Java <span sdata="langKeyword" value="numeric"><span class="keyword">numeric</span></span> 형식을 보다 작은 원본 서버 <span sdata="langKeyword" value="numeric"><span class="keyword">numeric</span></span> 형식으로 변환하는 것입니다. 이 변환은 일반적이며 SQL Server 변환 규칙을 따릅니다. 또한 전체 자릿수는 항상 잘리고(반올림되지 않음) 오버플로가 발생하면 지원되지 않는 변환 오류가 발생합니다. 예를 들어, 원본 정수 열에 대해 "1.9999" 값으로 <b>updateDecimal</b>을 사용하면 대상 열 값이 "1"이 됩니다. 하지만 "3000000000"을 전달하면 드라이버에서 오류가 발생합니다.</p></li><li><p><span class="label">데이터 의존(z)</span>: Java <span sdata="langKeyword" value="String"><span class="keyword">String</span></span> 유형을 내부 SQL Server 데이터 형식으로 변환하려면 먼저 드라이버에서 <span sdata="langKeyword" value="String"><span class="keyword">String</span></span> 값을 SQL Server로 전달하고 필요한 경우 SQL Server에서 변환을 수행해야 합니다. <b>sendStringParametersAsUnicode</b>가 true로 설정되어 있고 내부 SQL Server 데이터 형식이 <span sdata="langKeyword" value="image"><span class="keyword">image</span></span>인 경우 SQL Server는 <span sdata="langKeyword" value="nvarchar"><span class="keyword">nvarchar</span></span>에서 <span sdata="langKeyword" value="image"><span class="keyword">image</span></span>로의 변환을 허용하지 않으며 <b>SQLServerException</b>이 발생합니다. sendStringParametersAsUnicode가 false로 설정되어 있고 내부 SQL Server 데이터 형식이 <span sdata="langKeyword" value="image"><span class="keyword">image</span></span>인 경우 SQL Server는 <span sdata="langKeyword" value="varchar"><span class="keyword">varchar</span></span>에서 <span sdata="langKeyword" value="image"><span class="keyword">image</span></span>로의 변환을 허용하며 예외가 발생하지 않습니다.</p></li></ul><p>SQL Server는 변환을 수행하고 문제가 발생하면 JDBC 드라이버에 오류를 전달합니다.</p><p>SQL Server 열 데이터 형식이 <span sdata="langKeyword" value="XML"><span class="keyword">XML</span></span>인 경우 데이터 값은 올바른 <span sdata="langKeyword" value="XML"><span class="keyword">XML</span></span>이어야 합니다. <b>updateBytes</b>, <b>updateBinaryStream</b> 또는 <b>updateBlob</b> 메서드를 호출하는 경우 데이터 값은 XML 문자의 16진수 문자열 표현이어야 합니다. 예를 들면 다음과 같습니다. </p><div class="sampleCode"><span codeLanguage="other"><pre>&lt;hello&gt;world&lt;/hello&gt; = 0x3C68656C6C6F3E776F726C643C2F68656C6C6F3E </pre></span></div><p>XML 문자가 특정 문자 인코딩을 사용하는 경우에는 BOM(바이트 순서 표시)이 필요합니다.</p></div><h1 class="heading">setObject에서의 변환</h1><div id="sectionSection3" class="section" name="collapseableSection" style=""><p><a href="a8481c06-fbba-432b-8c69-4f4619c20ad4.htm">SQLServerPreparedStatement</a> 클래스의 <b>setObject(&lt;Type&gt;)</b> 메서드에 전달되는 Java 형식 데이터에 대해서는 다음과 같은 변환이 적용됩니다. </p><img alt="JDBCSetObjectConversions" src="../art/JDBC_JDBCSetObjectConversions.gif" /><p>대상 유형을 지정하지 않은 <b>setObject</b> 메서드는 기본 매핑을 사용합니다. <span sdata="langKeyword" value="String"><span class="keyword">String</span></span> 데이터 형식의 경우 값이 <span sdata="langKeyword" value="VARCHAR"><span class="keyword">VARCHAR</span></span> 길이를 초과하면 <span sdata="langKeyword" value="LONGVARCHAR"><span class="keyword">LONGVARCHAR</span></span>에 매핑되며 마찬가지로 <span sdata="langKeyword" value="NVARCHAR"><span class="keyword">NVARCHAR</span></span>는 값이 <span sdata="langKeyword" value="NVARCHAR"><span class="keyword">NVARCHAR</span></span>에서 지원하는 길이를 초과하면  <span sdata="langKeyword" value="LONGNVARCHAR"><span class="keyword">LONGNVARCHAR</span></span>에 매핑됩니다. <span sdata="langKeyword" value="byte[]"><span class="keyword">byte[]</span></span>의 경우도 마찬가지입니다. 값이 <span sdata="langKeyword" value="VARBINARY"><span class="keyword">VARBINARY</span></span>보다 길면 <span sdata="langKeyword" value="LONGVARBINARY"><span class="keyword">LONGVARBINARY</span></span>가 됩니다.</p><p>다음은 JDBC 드라이버의 setObject 메서드에서 지원하는 세 가지 변환 범주입니다.</p><ul><li><p><span class="label">비손실(x)</span>: setter 형식이 원본 서버 유형과 동일하거나 작은 경우의 숫자 변환입니다. 예를 들어, 원본 서버 <span sdata="langKeyword" value="decimal"><span class="keyword">decimal</span></span> 열에 대해 <b>setBigDecimal</b>을 호출하는 경우는 변환이 필요하지 않습니다. 숫자에서 문자로 변환하는 경우에는 <span sdata="langKeyword" value="numeric"><span class="keyword">numeric</span></span> 숫자 데이터 형식이 <span sdata="langKeyword" value="String"><span class="keyword">String</span></span>으로 변환됩니다. 예를 들어, 값이 "53"인 varchar(50) 열에 <b>setDouble</b>을 호출하면 해당 대상 열에 문자 값 "53"이 생성됩니다.</p></li><li><p><span class="label">변환(y)</span>: Java <span sdata="langKeyword" value="numeric"><span class="keyword">numeric</span></span> 형식을 보다 작은 원본 서버 <span sdata="langKeyword" value="numeric"><span class="keyword">numeric</span></span> 형식으로 변환하는 것입니다. 이 변환은 일반적이며 SQL Server 변환 규칙을 따릅니다. 또한 전체 자릿수는 항상 잘리고(반올림되지 않음) 오버플로로 인해 지원되지 않는 변환 오류가 발생합니다. 예를 들어, 원본 정수 열에 대해 "1.9999" 값으로 <b>updateDecimal</b>을 사용하면 대상 열 값이 "1"이 됩니다. 하지만 "3000000000"을 전달하면 드라이버에서 오류가 발생합니다.</p></li><li><p><span class="label">데이터 의존(z)</span>: Java <span sdata="langKeyword" value="String"><span class="keyword">String</span></span> 유형을 내부 SQL Server 데이터 형식으로 변환하려면 먼저 드라이버에서 <span sdata="langKeyword" value="String"><span class="keyword">String</span></span> 값을 SQL Server로 전달하고 필요한 경우 SQL Server에서 변환을 수행해야 합니다. <b>sendStringParametersAsUnicode</b> 연결 속성이 true로 설정되어 있고 내부 SQL Server 데이터 형식이 <span sdata="langKeyword" value="image"><span class="keyword">image</span></span>인 경우 SQL Server는 <span sdata="langKeyword" value="nvarchar"><span class="keyword">nvarchar</span></span>에서 <span sdata="langKeyword" value="image"><span class="keyword">image</span></span>로의 변환을 허용하지 않으며 SQLServerException이 발생합니다. <b>sendStringParametersAsUnicode</b>가 false로 설정되어 있고 내부 SQL Server 데이터 형식이 <span sdata="langKeyword" value="image"><span class="keyword">image</span></span>인 경우 SQL Server는 <span sdata="langKeyword" value="varchar"><span class="keyword">varchar</span></span>에서 <span sdata="langKeyword" value="image"><span class="keyword">image</span></span>로의 변환을 허용하며 예외가 발생하지 않습니다.</p></li></ul><p>SQL Server는 대량 설정 변환을 수행하고 문제가 발생하면 JDBC 드라이버에 오류를 전달합니다. 하지만 클라이언트 쪽 변환은 예외이며, 값이 <span sdata="langKeyword" value="date"><span class="keyword">date</span></span>, <span sdata="langKeyword" value="time"><span class="keyword">time</span></span>, <span sdata="langKeyword" value="timestamp"><span class="keyword">timestamp</span></span>, <span sdata="langKeyword" value="Boolean"><span class="keyword">Boolean</span></span> 및 <span sdata="langKeyword" value="String"><span class="keyword">String</span></span>인 경우에만 수행됩니다.</p><p>SQL Server 열 데이터 형식이 <span sdata="langKeyword" value="XML"><span class="keyword">XML</span></span>인 경우 데이터 값은 올바른 <span sdata="langKeyword" value="XML"><span class="keyword">XML</span></span>이어야 합니다. setObject(byte[], SQLXML), setObject(inputStream, SQLXML) 또는 setObject(Blob, SQLXML) 메서드를 호출하는 경우 데이터 값은 XML 문자의 16진수 문자열 표현이어야 합니다. 예를 들면 다음과 같습니다. </p><div class="sampleCode"><span codeLanguage="other"><pre>&lt;hello&gt;world&lt;/hello&gt; = 0x3C68656C6C6F3E776F726C643C2F68656C6C6F3E </pre></span></div><p>XML 문자가 특정 문자 인코딩을 사용하는 경우에는 BOM(바이트 순서 표시)이 필요합니다.</p></div><span id="seeAlsoSpan"><h1 class="heading">참고 항목</h1></span><div id="seeAlsoSection" class="section" name="collapseableSection" style=""><div class="seeAlsoStyle"><span sdata="link"><a href="7802328d-4d23-4775-9573-4169b127d258.htm">JDBC 드라이버 데이터 형식 이해</a></span></div></div></div><div id="footer" class="section"><span id="feedbackarea">이 항목에 대한 <a href="javascript:SubmitFeedback('DevDocs@Microsoft.com','','','','8.0.12060.10000','%0\d의견을%20보내주셔서%20감사합니다.%20개발자%20작성%20팀에서는%20설명서를%20보완하는%20데%20보내주신%20의견을%20적극%20활용하고%20있습니다.%20보내주신%20의견을%20검토하는%20동안%20명확한%20설명이%20필요하거나%20해결책에%20대한%20추가%20의견을%20묻는%20전자%20메일을%20받을%20수%20있습니다.%20귀하의%20전자%20메일은%20기타%20다른%20용도로%20사용되지%20않고%20검토가%20끝난%20후%20바로%20폐기됩니다.%0\AMicrosoft의%20개인%20정보%20취급%20방침에%20대한%20자세한%20내용은%20http://privacy.microsoft.com/ko-kr/default.aspx를%20참조하십시오.%0\A%0\d','고객%20의견');">사용자 의견</a>을 Microsoft로 보내 주십시오.</span><span id="copyrightarea"><p><a href="9bad553b-9e70-4696-8499-2e35f772a1e0.htm">© 2012 Microsoft. All rights reserved.</a></p></span></div></div></body></html>